name: Build and Release Installer

on:
  push:
    tags:
      - 'v*'  # Déclenche l'action lorsqu'un tag versionné est poussé (ex: v1.0.0)

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract version from tag
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
        shell: bash

      - name: Generate version.txt
        run: echo $VERSION > version.txt
        shell: bash

      - name: Commit version.txt
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add version.txt
          git commit -m "Mise à jour automatique de version.txt"
          git push origin HEAD:main
        shell: bash

      - name: Download Unity Build
        run: |
          curl -L -o build.zip https://builds.orbprojectmanagement.com/Windows/OrbProject_Build.zip
        shell: bash

      - name: Extract Unity Build
        run: |
          rm -rf OrbProject
          mkdir OrbProject
          unzip build.zip -d OrbProject
        shell: bash

      - name: Download Installer Images
        run: |
          curl -L -o cover.bmp https://builds.orbprojectmanagement.com/Images/cover.bmp
          curl -L -o LogoDL.ico https://builds.orbprojectmanagement.com/Images/LogoDL.ico
          curl -L -o logo.ico https://builds.orbprojectmanagement.com/Images/logo.ico
        shell: bash

      - name: Install Inno Setup
        run: |
          curl -L -o is.exe "https://jrsoftware.org/download.php/is.exe"
          start /wait is.exe /VERYSILENT /SUPPRESSMSGBOXES /NORESTART /SP-
        shell: cmd

      - name: Verify Inno Setup installation
        run: |
          where iscc
          if not exist "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" exit 1
        shell: cmd

      - name: Check if setup.iss exists and readable
        run: |
          dir setup.iss
          type setup.iss
        shell: cmd

      - name: Compile Setup with Inno Setup
        run: |
          "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" /DAppVersion=${{ env.VERSION }} "setup.iss"
        shell: cmd

      - name: Sign installer
        run: |
          "C:\Program Files (x86)\Windows Kits\10\bin\10.0.22621.0\x64\signtool.exe" sign /fd SHA256 /f OrbProject\WSATestCertificate.pfx /tr http://timestamp.digicert.com /td SHA256 Output\*.exe
        shell: cmd

      - name: Verify Signature (non-bloquant)
        continue-on-error: true
        run: |
          "C:\Program Files (x86)\Windows Kits\10\bin\10.0.22621.0\x64\signtool.exe" verify /pa Output\*.exe
        shell: cmd

      - name: Upload Installer as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Installer
          path: Output/*.exe

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: Output/*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
